[
    {
        "id": "70d96846.09f498",
        "type": "tab",
        "label": "Telldus sensors",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1a404673.458efa",
        "type": "tab",
        "label": "Telldus Local API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3dc3ce7c.0bde92",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "home",
        "name": "",
        "usetls": false,
        "tls": ""
    },
    {
        "id": "8d38359c.35de38",
        "type": "http request",
        "z": "70d96846.09f498",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": true,
        "url": "http://{{ipaddress}}/api/{{{topic}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 550,
        "y": 40,
        "wires": [
            [
                "f28a17ab.f8c558"
            ]
        ]
    },
    {
        "id": "808ce8.e7887318",
        "type": "change",
        "z": "70d96846.09f498",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\":\"Bearer \" & $globalContext(\"accessToken\")\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "ipaddress",
                "pt": "msg",
                "to": "ipaddress",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "8d38359c.35de38"
            ]
        ]
    },
    {
        "id": "245339aa.26e976",
        "type": "inject",
        "z": "70d96846.09f498",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensors/list",
        "payload": "{\"includeValues\":1,\"includeScale\":1,\"includeUnit\":1}",
        "payloadType": "json",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "808ce8.e7887318"
            ]
        ]
    },
    {
        "id": "fe2bccb2.561cc",
        "type": "comment",
        "z": "70d96846.09f498",
        "name": "Sensors",
        "info": "Get values for sensors visible by Telldus",
        "x": 80,
        "y": 40,
        "wires": []
    },
    {
        "id": "a353b729.25d108",
        "type": "change",
        "z": "70d96846.09f498",
        "name": "filter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.sensor[name]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "32cb63df.1fb59c"
            ]
        ]
    },
    {
        "id": "43027e35.b218c",
        "type": "comment",
        "z": "70d96846.09f498",
        "name": "Testing Influx line protocol",
        "info": "https://docs.influxdata.com/influxdb/v1.7/write_protocols/line_protocol_tutorial/  \n\nhttp://localhost:8086/write?db=mydb  \n\nPOST   \nweather,location=us-midwest temperature=82 1465839830100400200  \n|measurement|,tag_set| |field_set| |timestamp|  \n\n",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "dd43f6cd.4b68c8",
        "type": "http request",
        "z": "70d96846.09f498",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://home_automation_influxdb_1:8086/write?db=home",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 470,
        "y": 260,
        "wires": [
            [
                "679887f7.2b21a8"
            ]
        ]
    },
    {
        "id": "882ff7ad.89c168",
        "type": "inject",
        "z": "70d96846.09f498",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "cpu_load_short,host=server01,region=us-west value=0.64 1434055562000000000",
        "payloadType": "str",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "dd43f6cd.4b68c8"
            ]
        ]
    },
    {
        "id": "679887f7.2b21a8",
        "type": "debug",
        "z": "70d96846.09f498",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "b4a7d38c.fd4ce",
        "type": "change",
        "z": "70d96846.09f498",
        "name": "influx format",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.{\t   \"measurement\":\"sensors\",\t   \"fields\":data{$string(name):$number(value)},\t   \"tags\":{\t       \"id\":id,\t       \"model\":model,\t       \"name\":name,\t       \"protocol\":protocol,\t       \"sensorId\":sensorId\t   },\t   \"timestamp\":$millis()\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "fc2351c3.b71a2"
            ]
        ]
    },
    {
        "id": "32cb63df.1fb59c",
        "type": "function",
        "z": "70d96846.09f498",
        "name": "fix",
        "func": "// Fix name of power measuring socket device\ntry {\n//  let index = msg.payload.findIndex( ({ model }) => model === \"010f-0602-1001\" );\n  let index = msg.payload.findIndex( ({id}) => id == 6 );\n  node.status({fill:\"black\",shape:\"ring\",text:index});\n  if(index>=0) {\n    msg.payload[index].data[0].name = \"power\"\n    msg.payload[index].data[1].name = \"energy\"\n    node.status({});   // clear the status\n  }\n}\ncatch(error) {\n  node.status({fill:\"red\",shape:\"ring\",text:\"Error\"});\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "9649391f.8d3668",
                "b4a7d38c.fd4ce"
            ]
        ],
        "info": "Fibaro Wall Plug  \nseparate sensor names  "
    },
    {
        "id": "6d02710f.1a881",
        "type": "http request",
        "z": "1a404673.458efa",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://{{ipaddress}}/api/token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "21c18fd8.76531"
            ]
        ]
    },
    {
        "id": "a70f91a0.f42b3",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "app=\"Nodered\"",
        "payloadType": "str",
        "x": 440,
        "y": 180,
        "wires": [
            [
                "1d9b2717.cbf819"
            ]
        ]
    },
    {
        "id": "21c18fd8.76531",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "requestToken",
                "pt": "global",
                "to": "payload.token",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 200,
        "wires": [
            [
                "5ba827a0.e61388"
            ]
        ]
    },
    {
        "id": "64613dc5.fa6074",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "requestToken",
        "payloadType": "global",
        "x": 450,
        "y": 280,
        "wires": [
            [
                "729f9218.e24f6c"
            ]
        ]
    },
    {
        "id": "c323ab0d.4353f8",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Step 2 - Authenticate the app",
        "info": "Redirect the user to the url returned in step 1 to let him/her authenticate the app.",
        "x": 140,
        "y": 240,
        "wires": []
    },
    {
        "id": "fc3d50.7cf3e2b",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Step 1 - Request a request token",
        "info": "Request a request token by performing a PUT call to the endpoint /api/token. You need to supply the application name as a parameter “app”\n\n",
        "x": 150,
        "y": 200,
        "wires": []
    },
    {
        "id": "961398ac.02ca68",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Step 3 - Exchange for an access token",
        "info": "When the user has authenticated the request token in step 2 the application needs to exchange this for an access token. The access token can be used in the API requests. To exchange the request token for an access token perform a GET call to the same endpoint in step 1. Supply the request token as the parameter “token”.",
        "x": 170,
        "y": 280,
        "wires": []
    },
    {
        "id": "1d9b2717.cbf819",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"content-type\":\"application/x-www-form-urlencoded\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ipaddress",
                "pt": "msg",
                "to": "ipaddress",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 200,
        "wires": [
            [
                "6d02710f.1a881"
            ]
        ]
    },
    {
        "id": "5ba827a0.e61388",
        "type": "debug",
        "z": "1a404673.458efa",
        "name": "url",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.authUrl",
        "x": 1170,
        "y": 200,
        "wires": []
    },
    {
        "id": "e58b5d47.8b729",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "43200",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "refreshToken",
        "payload": "accessToken",
        "payloadType": "global",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "b655756c.4a9798"
            ]
        ]
    },
    {
        "id": "e5de5eb8.15189",
        "type": "http request",
        "z": "1a404673.458efa",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://{{ipaddress}}/api/refreshToken",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 670,
        "y": 340,
        "wires": [
            [
                "9ad46d93.240ad"
            ]
        ]
    },
    {
        "id": "b655756c.4a9798",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\":\"Bearer \" & payload\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "ipaddress",
                "pt": "msg",
                "to": "ipaddress",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 340,
        "wires": [
            [
                "e5de5eb8.15189"
            ]
        ]
    },
    {
        "id": "9ad46d93.240ad",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "accessToken",
                "pt": "global",
                "to": "payload.token",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 340,
        "wires": [
            [
                "483cbd64.dfc6d4"
            ]
        ]
    },
    {
        "id": "3f767c28.af6ef4",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Refresh token",
        "info": "",
        "x": 90,
        "y": 340,
        "wires": []
    },
    {
        "id": "28918b1b.3eff54",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Telldus  Local API",
        "info": "- Authentication steps are documented at  \nhttp://api.telldus.net/localapi/api.html  \n  \n- The Local API is otherwise not well documented, although it got some resemblance with the Live API  \nhttps://api.telldus.com/  \n\n- My TellStick has some additional info onboard  \nhttp://192.168.1.5/api  \n(Telldus TellStick ZNet Lite v2)  \n",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "2952067e.42a36a",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Init",
        "payload": "192.168.1.5",
        "payloadType": "str",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "57e7dcac.f0ba64"
            ]
        ]
    },
    {
        "id": "57e7dcac.f0ba64",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ipaddress",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "729f9218.e24f6c",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ipaddress",
                "pt": "msg",
                "to": "ipaddress",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 280,
        "wires": [
            [
                "cf568dd4.8e4cf"
            ]
        ]
    },
    {
        "id": "cf568dd4.8e4cf",
        "type": "http request",
        "z": "1a404673.458efa",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://{{ipaddress}}/api/token?token={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 830,
        "y": 280,
        "wires": [
            [
                "a1e4b038.b9fd9"
            ]
        ]
    },
    {
        "id": "a1e4b038.b9fd9",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "accessToken",
                "pt": "global",
                "to": "payload.token",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "f705a0ee.7c043"
            ]
        ]
    },
    {
        "id": "f705a0ee.7c043",
        "type": "debug",
        "z": "1a404673.458efa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1230,
        "y": 280,
        "wires": []
    },
    {
        "id": "483cbd64.dfc6d4",
        "type": "debug",
        "z": "1a404673.458efa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1070,
        "y": 340,
        "wires": []
    },
    {
        "id": "fc2351c3.b71a2",
        "type": "influxdb batch",
        "z": "70d96846.09f498",
        "influxdb": "3dc3ce7c.0bde92",
        "precision": "ms",
        "retentionPolicy": "",
        "name": "",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "f28a17ab.f8c558",
        "type": "function",
        "z": "70d96846.09f498",
        "name": "statusCode",
        "func": "//node.status({fill:\"red\",shape:\"ring\",text:msg.statusCode});\nif (msg.statusCode == 200)\n{\n  node.status({});\n} else {\n  node.status({fill:\"red\",shape:\"ring\",text:msg.statusCode});\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 40,
        "wires": [
            [
                "42642271.b5cfec"
            ]
        ]
    },
    {
        "id": "46d45f31.50a01",
        "type": "inject",
        "z": "70d96846.09f498",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor/setName",
        "payload": "{    \"id\": 7,    \"name\": \"\"}",
        "payloadType": "json",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "ec5f201b.db31f"
            ]
        ]
    },
    {
        "id": "e29fd0c8.69ee3",
        "type": "http request",
        "z": "70d96846.09f498",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": true,
        "url": "http://{{ipaddress}}/api/{{{topic}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 320,
        "wires": [
            [
                "759265e.0e3349c"
            ]
        ]
    },
    {
        "id": "759265e.0e3349c",
        "type": "debug",
        "z": "70d96846.09f498",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 320,
        "wires": []
    },
    {
        "id": "ec5f201b.db31f",
        "type": "change",
        "z": "70d96846.09f498",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\":\"Bearer \" & $globalContext(\"accessToken\")\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "ipaddress",
                "pt": "msg",
                "to": "ipaddress",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 320,
        "wires": [
            [
                "e29fd0c8.69ee3"
            ]
        ]
    },
    {
        "id": "eccbc447.2647b8",
        "type": "comment",
        "z": "70d96846.09f498",
        "name": "Transform",
        "info": "Use known sensors only",
        "x": 80,
        "y": 100,
        "wires": []
    },
    {
        "id": "78b3995f.c38868",
        "type": "comment",
        "z": "70d96846.09f498",
        "name": "Storage",
        "info": "Store values in Influx database",
        "x": 70,
        "y": 160,
        "wires": []
    },
    {
        "id": "8850d49c.8a9d38",
        "type": "comment",
        "z": "70d96846.09f498",
        "name": "Rename sensor",
        "info": "http://192.168.1.5/api",
        "x": 100,
        "y": 320,
        "wires": []
    },
    {
        "id": "64b8d1b7.9e6e9",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "devices/list",
        "payload": "{}",
        "payloadType": "json",
        "x": 270,
        "y": 400,
        "wires": [
            [
                "4c0624b.5b716dc"
            ]
        ]
    },
    {
        "id": "4b13d0cf.e440b",
        "type": "debug",
        "z": "1a404673.458efa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "6ae3ba8b.2674a4",
        "type": "http request",
        "z": "1a404673.458efa",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": true,
        "url": "http://{{ipaddress}}/api/{{{topic}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 400,
        "wires": [
            [
                "4b13d0cf.e440b"
            ]
        ]
    },
    {
        "id": "4c0624b.5b716dc",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\":\"Bearer \" & $globalContext(\"accessToken\")\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "ipaddress",
                "pt": "msg",
                "to": "ipaddress",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 400,
        "wires": [
            [
                "6ae3ba8b.2674a4"
            ]
        ]
    },
    {
        "id": "c819234c.ad801",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensors/list",
        "payload": "{}",
        "payloadType": "json",
        "x": 250,
        "y": 440,
        "wires": [
            [
                "4c0624b.5b716dc"
            ]
        ]
    },
    {
        "id": "7cdb8160.8870f",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor/info",
        "payload": "{\"id\":7}",
        "payloadType": "json",
        "x": 270,
        "y": 480,
        "wires": [
            [
                "4c0624b.5b716dc"
            ]
        ]
    },
    {
        "id": "9eff3654.dc9cc8",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "Get all sensor values",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensors/list",
        "payload": "{\"includeValues\":1,\"includeScale\":1,\"includeUnit\":1}",
        "payloadType": "json",
        "x": 280,
        "y": 520,
        "wires": [
            [
                "4c0624b.5b716dc"
            ]
        ]
    },
    {
        "id": "ac93889d.c209a8",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "Rename sensor",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor/setName",
        "payload": "{    \"id\": 1,    \"name\": \"\"}",
        "payloadType": "json",
        "x": 320,
        "y": 560,
        "wires": [
            [
                "4c0624b.5b716dc"
            ]
        ]
    },
    {
        "id": "908ce346.2ffc4",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Examples",
        "info": "",
        "x": 80,
        "y": 400,
        "wires": []
    },
    {
        "id": "91951f5b.83403",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Config",
        "info": "IP-address of your Telldus device",
        "x": 70,
        "y": 100,
        "wires": []
    },
    {
        "id": "7aa7dcf8.0198a4",
        "type": "comment",
        "z": "1a404673.458efa",
        "name": "Authentication",
        "info": "- Authentication steps are documented at  \nhttp://api.telldus.net/localapi/api.html  ",
        "x": 90,
        "y": 160,
        "wires": []
    },
    {
        "id": "9649391f.8d3668",
        "type": "debug",
        "z": "70d96846.09f498",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 600,
        "y": 100,
        "wires": []
    },
    {
        "id": "9b283bed.cffaa",
        "type": "debug",
        "z": "70d96846.09f498",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 995,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "364e8dbb.c22892",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 660,
        "wires": [
            [
                "70b9b079.30d4e",
                "c22e7d09.f098d"
            ]
        ]
    },
    {
        "id": "70b9b079.30d4e",
        "type": "function",
        "z": "1a404673.458efa",
        "name": "",
        "func": "os = global.get(\"os\")\nmsg.payload = os.hostname()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 620,
        "wires": [
            [
                "5d5c7de0.3a7724"
            ]
        ]
    },
    {
        "id": "c22e7d09.f098d",
        "type": "change",
        "z": "1a404673.458efa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "os.hostname",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 720,
        "wires": [
            [
                "c8d094af.7ce708"
            ]
        ]
    },
    {
        "id": "5d5c7de0.3a7724",
        "type": "debug",
        "z": "1a404673.458efa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "c8d094af.7ce708",
        "type": "debug",
        "z": "1a404673.458efa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 900,
        "y": 700,
        "wires": []
    },
    {
        "id": "42642271.b5cfec",
        "type": "switch",
        "z": "70d96846.09f498",
        "name": "statusCode",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 40,
        "wires": [
            [
                "9b283bed.cffaa"
            ],
            [
                "a353b729.25d108"
            ]
        ]
    },
    {
        "id": "490ca971.2cc678",
        "type": "inject",
        "z": "1a404673.458efa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "dev",
        "payload": "app=\"Nodered_dev\"",
        "payloadType": "str",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "1d9b2717.cbf819"
            ]
        ]
    }
]